function [ params, scallopData ] = readGroundTruthScallop( params, statFile )
%read scallop_data Reads scallop data from csv file

%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/prasanna/Linux_Workspaces/Scallops/Missions/NightScallop_DV119_Line1/110710_DV117_Sizing.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2012/12/19 18:13:47

%% Initialize variables.

filename = statFile;
delimiter = ',';
startRow = 2;

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = [dataArray{:,1:end-1}];
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,5,6,7,8,9,10,11,12,13,14,15]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(thousandsRegExp, ',', 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end

%% Split data into numeric and cell columns.
rawNumericColumns = raw(:, [1,5,6,7,8,9,10,11,12,13,14,15]);
rawCellColumns = raw(:, [2,3,4]);


%% Allocate imported array to column variable names
SrNo = cell2mat(rawNumericColumns(:, 1));
ImageName = rawCellColumns(:, 1);
BedType = rawCellColumns(:, 2);
ImageQuality = rawCellColumns(:, 3);
X1 = cell2mat(rawNumericColumns(:, 2));
Y1 = cell2mat(rawNumericColumns(:, 3));
X2 = cell2mat(rawNumericColumns(:, 4));
Y2 = cell2mat(rawNumericColumns(:, 5));
PixelLength = cell2mat(rawNumericColumns(:, 6));
PhysicalLength = cell2mat(rawNumericColumns(:, 7));
Altitude = cell2mat(rawNumericColumns(:, 8));
Latitude = cell2mat(rawNumericColumns(:, 9));
Longitude = cell2mat(rawNumericColumns(:, 10));
Depth = cell2mat(rawNumericColumns(:, 11));
Pitch = cell2mat(rawNumericColumns(:, 12));

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw numericData col rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me rawNumericColumns rawCellColumns;

%% Copy Columns into Scallop Struct

scallopData.ImageIndex = cellfun(@stripNumbers, ImageName);
scallopData.X = (X1+X2)/2;
scallopData.Y = (Y1+Y2)/2;
scallopData.radius = PixelLength/2;
scallopData.origRadius = PhysicalLength/2;
scallopData.ImageName = ImageName;

%% Updating params
params.numScallops = length(ImageName);

%% Getting image dimensions
tempImage = imread( sprintf('%s/%s', params.imageFolder, ImageName{1}));
imageSize = size(tempImage);
params.imageSize = imageSize(1:2);

end

%% Function to strip numbers from filenames
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function num = stripNumbers( str )
    strNum = str(6:11);
    num = str2double(strNum);
end




